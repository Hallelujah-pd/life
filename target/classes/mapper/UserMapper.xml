<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.life.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.school.life.bean.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="self_introduction" jdbcType="VARCHAR" property="selfIntroduction" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="relation" jdbcType="VARCHAR" property="relation" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
  </resultMap>

  <resultMap id="WithArticleResultMap" type="com.school.life.bean.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="self_introduction" jdbcType="VARCHAR" property="selfIntroduction" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="relation" jdbcType="VARCHAR" property="relation" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />

    <association property="article" javaType="com.school.life.bean.Article">
      <id column="article_id" property="articleId" />
      <result column="article_time" property="articleTime" />
      <result column="user_id" property="userId" />
      <result column="article_content" property="articleContent" />
      <result column="article_click" property="articleClick" />
      <result column="article_title" property="articleTitle" />
      <result column="article_img" property="articleImg" />
      <result column="user_id" property="userId"/>
    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, real_name, self_introduction, head_img, username, relation, reason, email, 
    user_password
  </sql>
  <sql id="WithArticle_Column_List">
  u.user_id, u.real_name, u.self_introduction, u.head_img, u.username, u.relation, u.reason, u.email, u.user_password,
  a.article_id, a.article_time, a.user_id, a.article_content, a.article_click, a.article_title,
  a.article_img
  </sql>

  <select id="selectByExample" parameterType="com.school.life.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.school.life.bean.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.school.life.bean.User">
    insert into user (user_id, real_name, self_introduction, 
      head_img, username, relation, 
      reason, email, user_password
      )
    values (#{userId,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{selfIntroduction,jdbcType=VARCHAR}, 
      #{headImg,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{relation,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.school.life.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="selfIntroduction != null">
        self_introduction,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="relation != null">
        relation,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="selfIntroduction != null">
        #{selfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="relation != null">
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.school.life.bean.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" />
      from user where username = #{username,jdbcType=INTEGER} and user_password = #{userPassword,jdbcType=INTEGER};
  </select>
  <select id="selectByPrimaryKeyWithArticle" resultMap="WithArticleResultMap">
    select
    <include refid="WithArticle_Column_List" />
    FROM user u
    left join article a on u.`user_id`=a.`user_id`
    where u.user_id = #{userId,jdbcType=INTEGER}
  </select>


  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.selfIntroduction != null">
        self_introduction = #{record.selfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.headImg != null">
        head_img = #{record.headImg,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.relation != null">
        relation = #{record.relation,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      self_introduction = #{record.selfIntroduction,jdbcType=VARCHAR},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      relation = #{record.relation,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.life.bean.User">
    update user
    <set>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="selfIntroduction != null">
        self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="relation != null">
        relation = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.life.bean.User">
    update user
    set real_name = #{realName,jdbcType=VARCHAR},
      self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>