<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.life.dao.PhotoMapper">
  <resultMap id="BaseResultMap" type="com.school.life.bean.Photo">
    <id column="photo_id" jdbcType="INTEGER" property="photoId" />
    <result column="photo_img" jdbcType="VARCHAR" property="photoImg" />
    <result column="photo_title" jdbcType="VARCHAR" property="photoTitle" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="photo_time" jdbcType="TIMESTAMP" property="photoTime" />
    <result column="photo_click" jdbcType="INTEGER" property="photoClick" />
    <result column="photo_content" jdbcType="VARCHAR" property="photoContent" />
  </resultMap>

  <resultMap id="WithUserResultMap" type="com.school.life.bean.Photo">
    <id column="photo_id" jdbcType="INTEGER" property="photoId" />
    <result column="photo_img" jdbcType="VARCHAR" property="photoImg" />
    <result column="photo_title" jdbcType="VARCHAR" property="photoTitle" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="photo_time" jdbcType="TIMESTAMP" property="photoTime" />
    <result column="photo_click" jdbcType="INTEGER" property="photoClick" />
    <result column="photo_content" jdbcType="VARCHAR" property="photoContent" />

      <association property="user" javaType="com.school.life.bean.User">
        <id column="user_id" property="userId"/>
        <result column="real_name" property="realName"/>
        <result column="self_introduction" property="selfIntroduction"/>
        <result column="head_img" property="headImg"/>
        <result column="username" property="username"/>
        <result column="relation" property="relation"/>
        <result column="reason" property="reason"/>
        <result column="email" property="email"/>
        <result column="user_password" property="userPassword"/>
      </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    photo_id, photo_img, photo_title, user_id, photo_time, photo_click, photo_content
  </sql>
  <sql id="WithUser_Column_List">
    u.user_id, u.real_name, u.self_introduction, u.head_img, u.username, u.relation, u.reason, u.email, u.user_password,
    p.photo_id, p.photo_img, p.photo_title, p.user_id, p.photo_time, p.photo_click, p.photo_content
  </sql>
  <select id="selectByExample" parameterType="com.school.life.bean.PhotoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_photo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_photo
    where photo_id = #{photoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_photo
    where photo_id = #{photoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.school.life.bean.PhotoExample">
    delete from t_photo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.school.life.bean.Photo">
    insert into t_photo (photo_id, photo_img, photo_title, 
      user_id, photo_time, photo_click, 
      photo_content)
    values (#{photoId,jdbcType=INTEGER}, #{photoImg,jdbcType=VARCHAR}, #{photoTitle,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{photoTime,jdbcType=TIMESTAMP}, #{photoClick,jdbcType=INTEGER}, 
      #{photoContent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.school.life.bean.Photo">
    insert into t_photo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="photoId != null">
        photo_id,
      </if>
      <if test="photoImg != null">
        photo_img,
      </if>
      <if test="photoTitle != null">
        photo_title,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="photoTime != null">
        photo_time,
      </if>
      <if test="photoClick != null">
        photo_click,
      </if>
      <if test="photoContent != null">
        photo_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="photoId != null">
        #{photoId,jdbcType=INTEGER},
      </if>
      <if test="photoImg != null">
        #{photoImg,jdbcType=VARCHAR},
      </if>
      <if test="photoTitle != null">
        #{photoTitle,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="photoTime != null">
        #{photoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="photoClick != null">
        #{photoClick,jdbcType=INTEGER},
      </if>
      <if test="photoContent != null">
        #{photoContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.school.life.bean.PhotoExample" resultType="java.lang.Long">
    select count(*) from t_photo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectByExampleWithUserOrderByTime" resultMap="WithUserResultMap">
      select *  FROM t_photo p
                       left join user u on p.`user_id`=u.`user_id` order by p.`photo_time` DESC
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update t_photo
    <set>
      <if test="record.photoId != null">
        photo_id = #{record.photoId,jdbcType=INTEGER},
      </if>
      <if test="record.photoImg != null">
        photo_img = #{record.photoImg,jdbcType=VARCHAR},
      </if>
      <if test="record.photoTitle != null">
        photo_title = #{record.photoTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.photoTime != null">
        photo_time = #{record.photoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.photoClick != null">
        photo_click = #{record.photoClick,jdbcType=INTEGER},
      </if>
      <if test="record.photoContent != null">
        photo_content = #{record.photoContent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_photo
    set photo_id = #{record.photoId,jdbcType=INTEGER},
      photo_img = #{record.photoImg,jdbcType=VARCHAR},
      photo_title = #{record.photoTitle,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      photo_time = #{record.photoTime,jdbcType=TIMESTAMP},
      photo_click = #{record.photoClick,jdbcType=INTEGER},
      photo_content = #{record.photoContent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.life.bean.Photo">
    update t_photo
    <set>
      <if test="photoImg != null">
        photo_img = #{photoImg,jdbcType=VARCHAR},
      </if>
      <if test="photoTitle != null">
        photo_title = #{photoTitle,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="photoTime != null">
        photo_time = #{photoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="photoClick != null">
        photo_click = #{photoClick,jdbcType=INTEGER},
      </if>
      <if test="photoContent != null">
        photo_content = #{photoContent,jdbcType=VARCHAR},
      </if>
    </set>
    where photo_id = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.life.bean.Photo">
    update t_photo
    set photo_img = #{photoImg,jdbcType=VARCHAR},
      photo_title = #{photoTitle,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      photo_time = #{photoTime,jdbcType=TIMESTAMP},
      photo_click = #{photoClick,jdbcType=INTEGER},
      photo_content = #{photoContent,jdbcType=VARCHAR}
    where photo_id = #{photoId,jdbcType=INTEGER}
  </update>
</mapper>