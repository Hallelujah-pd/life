<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.life.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.school.life.bean.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="reply_id" jdbcType="INTEGER" property="replyId" />
  </resultMap>
  <resultMap id="WithUserResultMap" type="com.school.life.bean.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="reply_id" jdbcType="INTEGER" property="replyId" />

    <association property="user" javaType="com.school.life.bean.User">
      <id column="user_id" property="userId"/>
      <result column="real_name" property="realName"/>
      <result column="self_introduction" property="selfIntroduction"/>
      <result column="head_img" property="headImg"/>
      <result column="username" property="username"/>
      <result column="relation" property="relation"/>
      <result column="reason" property="reason"/>
      <result column="email" property="email"/>
      <result column="user_password" property="userPassword"/>
    </association>
  </resultMap>
  <sql id="WithUser_Column_List">
    u.user_id, u.real_name, u.self_introduction, u.head_img, u.username, u.relation, u.reason, u.email, u.user_password,
    c.comment_id,c.comment_time,c.comment_content,c.article_id,c.reply_id,c.user_id
  </sql>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, comment_time, comment_content, user_id, article_id, reply_id
  </sql>
  <select id="selectByExample" parameterType="com.school.life.bean.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.school.life.bean.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.school.life.bean.Comment">
    insert into comment (comment_id, comment_time, comment_content, 
      user_id, article_id, reply_id
      )
    values (#{commentId,jdbcType=INTEGER}, #{commentTime,jdbcType=TIMESTAMP}, #{commentContent,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.school.life.bean.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.school.life.bean.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByExampleWithUser" resultMap="WithUserResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithUser_Column_List" />
    FROM comment c
    left join user u on c.`user_id`=u.`user_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectOrderByTimeAndUser" resultMap="WithUserResultMap">
    select *  FROM comment c
                     left join user u on c.`user_id`=u.`user_id` order by c.`comment_time` DESC
  </select>
  <select id="selectByExampleWithUserByArticleId" resultMap="WithUserResultMap">
    select *
    from comment
    where article_id = #{articleId,jdbcType=INTEGER};
  </select>
  <select id="selectByExampleWithUserByArticleIdAndReplyId" resultMap="WithUserResultMap">
    SELECT
      *
    FROM
      `comment` AS c
        LEFT JOIN `comment` AS r ON r.reply_id = c.comment_id
        LEFT JOIN `user` AS u ON c.user_id = u.user_id
    WHERE
      c.article_id = #{articleId,jdbcType=INTEGER};
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.commentTime != null">
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=INTEGER},
      </if>
      <if test="record.replyId != null">
        reply_id = #{record.replyId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      article_id = #{record.articleId,jdbcType=INTEGER},
      reply_id = #{record.replyId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.life.bean.Comment">
    update comment
    <set>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null">
        reply_id = #{replyId,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.life.bean.Comment">
    update comment
    set comment_time = #{commentTime,jdbcType=TIMESTAMP},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      reply_id = #{replyId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>